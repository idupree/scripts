#!/bin/bash
set -eux
testdir="$(mktemp -d)"
scriptdir="$(dirname "$(readlink -f "$0")")"
cd "/var/empty" # Make sure the scripts don't need any given pwd.
echo "Testing scripts from $scriptdir in $testdir ..."
trap 'echo "test failed"' EXIT

echo "80characters plus newline"
test "$("$scriptdir/80characters" | wc -c)" = 81

echo "80characters sans newline"
# $() strips trailing newline if any.
test "$(printf '%s' "$("$scriptdir/80characters")" | wc -c)" = 80

echo "setting up tree tests"
mkdir -p "$testdir/test1/dir1/dir2"
touch "$testdir/test1/dir1/file"
ln -s '../file' "$testdir/test1/dir1/dir2/ln1"
ln -s '../vile' "$testdir/test1/dir1/dir2/ln2"
ln -s '..' "$testdir/test1/dir1/dir2/ln3"

echo "lntree"
"$scriptdir/lntree" "$testdir/test1" "$testdir/dest1"
echo "lntree count"
test "$(find "$testdir/dest1" | wc -l)" = 7
echo "lntree contents"
test -d "$testdir/dest1"
test -d "$testdir/dest1/dir1"
test -d "$testdir/dest1/dir1/dir2"
test -f "$testdir/dest1/dir1/file"
test -L "$testdir/dest1/dir1/dir2/ln1"
test -L "$testdir/dest1/dir1/dir2/ln2"
test -L "$testdir/dest1/dir1/dir2/ln3"

# 'fork' ought to have some tests.
# They'd ideally require IPC and pseudo TTYs.

echo "xspf2m3u"
test "$("$scriptdir/xspf2m3u" "$scriptdir/tests/Playlist_1.xspf")" = \
'file:///home/wesnoth/main_menu.ogg
file:///home/blobwars/circuitOverlode.ogg'

echo "mkSymlink"
"$scriptdir/mkSymlink" "$testdir/a" -s b
test -L "$testdir/a"
test "$(readlink "$testdir/a")" = "b"
# TODO test the interactive features.

echo "mv_spaces_to_underscores"
mkdir "$testdir/sp"
touch "$testdir/sp"/{a,b_c_d,'e f g','h_  ij '}
"$scriptdir/mv_spaces_to_underscores" "$testdir/sp"/*
test "$(ls "$testdir/sp")" = 'a
b_c_d
e_f_g
h___ij_'

echo "runc"
test "$(runc "$scriptdir/tests/script.c" "arg 1" "arg 2")" = 'Arguments(2):  arg 1  arg 2'

echo "random_alnum"
"$scriptdir/random_alnum"
test "$("$scriptdir/random_alnum" --help)" = "$("$scriptdir/random_alnum" --help)"
test "$("$scriptdir/random_alnum")" != "$("$scriptdir/random_alnum")"
test "$(printf '%s' "$("$scriptdir/random_alnum" -n20)" | wc -c)" = 20
test "$(printf '%s' "$("$scriptdir/random_alnum" -b64 0-9a-f)" | wc -c)" = 16
test "$(printf '%s' "$("$scriptdir/random_alnum" -b64 0-9a-g)" | wc -c)" = 16
test "$(printf '%s' "$("$scriptdir/random_alnum" -b64 0-9a-e)" | wc -c)" = 17

trap - EXIT
echo "Success!"
